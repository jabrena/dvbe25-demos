openapi: 3.1.0
info:
  title: Cursor Background Agents API
  description: API for managing AI-powered coding agents that work autonomously on your repositories
  version: 1.0.0
  contact:
    name: Cursor API Support
    url: https://docs.cursor.com
    email: support@cursor.com

servers:
  - url: https://api.cursor.com
    description: Production server

tags:
  - name: Agent Management
    description: Operations for creating, deleting, and modifying agents
  - name: Agent Information
    description: Operations for retrieving agent information and status
  - name: General Endpoints
    description: General API operations including API key info, models, and repositories

paths:
  /v0/agents:
    post:
      summary: Launch an Agent
      description: Start a new background agent to work on your repository
      operationId: launchAgent
      tags:
        - Agent Management
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LaunchAgentRequest'
            examples:
              java_hello_world_prompt:
                summary: Java Hello World prompt
                value:
                  prompt:
                    text: "Create a Java Hello World program and verify the results compiling and executing"
                  source:
                    repository: "https://github.com/jabrena/cursor-background-agent-api-java-hello-world"
                    ref: "main"
                  model: "claude-4-sonnet"
                  target:
                    autoCreatePr: true
              simple_prompt:
                summary: Simple text prompt
                value:
                  prompt:
                    text: "Add a README.md file with installation instructions"
                  source:
                    repository: "https://github.com/your-org/your-repo"
                    ref: "main"
              complete_prompt:
                summary: Complete prompt with model, target, and webhook
                value:
                  prompt:
                    text: "Add a README.md file with installation instructions"
                  source:
                    repository: "https://github.com/your-org/your-repo"
                    ref: "main"
                  model: "claude-4-sonnet"
                  target:
                    autoCreatePr: false
                    branchName: "feature/add-readme"
                  webhook:
                    url: "https://example.com/webhooks/cursor-agent"
                    secret: "your-webhook-secret-key-minimum-32-characters"
              with_images:
                summary: Prompt with images
                value:
                  prompt:
                    text: "Add a README.md file with installation instructions"
                    images:
                      - data: "iVBORw0KGgoAAAANSUhEUgAA..."
                        dimension:
                          width: 1024
                          height: 768
                  source:
                    repository: "https://github.com/your-org/your-repo"
                    ref: "main"
                  model: "claude-4-sonnet"
                  target:
                    autoCreatePr: true
                    branchName: "feature/add-readme-with-images"
                  webhook:
                    url: "https://example.com/webhooks/cursor-agent"
                    secret: "your-webhook-secret-key-minimum-32-characters"
      responses:
        '201':
          description: Agent created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
              examples:
                created_agent:
                  summary: Successfully created agent
                  value:
                    id: "bc_abc123"
                    name: "Add README Documentation"
                    status: "CREATING"
                    source:
                      repository: "https://github.com/your-org/your-repo"
                      ref: "main"
                    target:
                      branchName: "cursor/add-readme-1234"
                      url: "https://cursor.com/agents?id=bc_abc123"
                      autoCreatePr: false
                    createdAt: "2024-01-15T10:30:00Z"
        '400':
          description: Bad request - Invalid input parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                validation_error:
                  summary: Validation error
                  value:
                    error:
                      code: "VALIDATION_ERROR"
                      message: "Invalid request data"
        '401':
          description: Unauthorized - Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unauthorized:
                  summary: Unauthorized access
                  value:
                    error:
                      code: "UNAUTHORIZED"
                      message: "Authentication required"
        '403':
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                forbidden:
                  summary: Insufficient permissions
                  value:
                    error:
                      code: "FORBIDDEN"
                      message: "Insufficient permissions"
        '429':
          description: Too Many Requests - Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                rate_limit:
                  summary: Rate limit exceeded
                  value:
                    error:
                      code: "RATE_LIMIT_EXCEEDED"
                      message: "Too many requests"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                server_error:
                  summary: Internal server error
                  value:
                    error:
                      code: "INTERNAL_ERROR"
                      message: "An unexpected error occurred"

    get:
      summary: List Agents
      description: Retrieve a list of all background agents
      operationId: listAgents
      tags:
        - Agent Information
      security:
        - BearerAuth: []
      parameters:
        - name: limit
          in: query
          required: false
          description: Number of background agents to return
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
            example: 20
        - name: cursor
          in: query
          required: false
          description: Pagination cursor from the previous response
          schema:
            type: string
            minLength: 1
            example: "bc_xyz789"
      responses:
        '200':
          description: Agents retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentsList'
              examples:
                agents_list:
                  summary: List of agents
                  value:
                    agents:
                      - id: "bc_abc123"
                        name: "Add README Documentation"
                        status: "RUNNING"
                        source:
                          repository: "https://github.com/your-org/your-repo"
                          ref: "main"
                        target:
                          branchName: "cursor/add-readme-1234"
                          url: "https://cursor.com/agents?id=bc_abc123"
                          prUrl: "https://github.com/your-org/your-repo/pull/1234"
                          autoCreatePr: false
                        summary: "Added README.md with installation instructions and usage examples"
                        createdAt: "2024-01-15T10:30:00Z"
                    nextCursor: "bc_def456"
        '401':
          description: Unauthorized - Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unauthorized:
                  summary: Unauthorized access
                  value:
                    error:
                      code: "UNAUTHORIZED"
                      message: "Authentication required"
        '403':
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                forbidden:
                  summary: Insufficient permissions
                  value:
                    error:
                      code: "FORBIDDEN"
                      message: "Insufficient permissions"
        '429':
          description: Too Many Requests - Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                rate_limit:
                  summary: Rate limit exceeded
                  value:
                    error:
                      code: "RATE_LIMIT_EXCEEDED"
                      message: "Too many requests"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                server_error:
                  summary: Internal server error
                  value:
                    error:
                      code: "INTERNAL_ERROR"
                      message: "An unexpected error occurred"

  /v0/agents/{id}/followup:
    post:
      summary: Add Follow-up
      description: Add a follow-up message or instruction to an existing agent
      operationId: addFollowUp
      tags:
        - Agent Management
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the agent
          schema:
            type: string
            pattern: '^bc_[a-zA-Z0-9]+$'
            example: "bc_abc123"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FollowUpRequest'
            examples:
              text_followup:
                summary: Text follow-up
                value:
                  prompt:
                    text: "Also add unit tests for the new functionality"
      responses:
        '200':
          description: Follow-up added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowUpResponse'
              examples:
                followup_success:
                  summary: Follow-up added successfully
                  value:
                    id: "bc_abc123"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Agent not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                not_found:
                  summary: Agent not found
                  value:
                    error:
                      code: "AGENT_NOT_FOUND"
                      message: "Agent with specified ID not found"

  /v0/agents/{id}:
    delete:
      summary: Delete an Agent
      description: Delete an agent by its unique identifier
      operationId: deleteAgent
      tags:
        - Agent Management
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the agent
          schema:
            type: string
            pattern: '^bc_[a-zA-Z0-9]+$'
            example: "bc_abc123"
      responses:
        '200':
          description: Agent deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAgentResponse'
              examples:
                delete_success:
                  summary: Agent deleted successfully
                  value:
                    id: "bc_abc123"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Agent not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                not_found:
                  summary: Agent not found
                  value:
                    error:
                      code: "AGENT_NOT_FOUND"
                      message: "Agent with specified ID not found"

    get:
      summary: Get Agent Information
      description: Retrieve information about a specific agent by its unique identifier
      operationId: getAgent
      tags:
        - Agent Information
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the agent
          schema:
            type: string
            pattern: '^bc_[a-zA-Z0-9]+$'
            example: "bc_abc123"
      responses:
        '200':
          description: Agent information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
              examples:
                agent_info:
                  summary: Agent information
                  value:
                    id: "bc_abc123"
                    name: "Add README Documentation"
                    status: "COMPLETED"
                    source:
                      repository: "https://github.com/your-org/your-repo"
                      ref: "main"
                    target:
                      branchName: "cursor/add-readme-1234"
                      url: "https://cursor.com/agents?id=bc_abc123"
                      prUrl: "https://github.com/your-org/your-repo/pull/1234"
                      autoCreatePr: false
                    summary: "Added README.md with installation instructions and usage examples"
                    createdAt: "2024-01-15T10:30:00Z"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Agent not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v0/agents/{id}/conversation:
    get:
      summary: Get Agent Conversation
      description: Retrieve the conversation history and messages for a specific agent
      operationId: getAgentConversation
      tags:
        - Agent Information
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier of the agent
          schema:
            type: string
            pattern: '^bc_[a-zA-Z0-9]+$'
            example: "bc_abc123"
      responses:
        '200':
          description: Agent conversation retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationResponse'
              examples:
                conversation_example:
                  summary: Agent conversation
                  value:
                    id: "bc_abc123"
                    messages:
                      - id: "msg_123"
                        type: "user_message"
                        text: "Add a README.md file with installation instructions"
        '401':
          description: Unauthorized - Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden - Insufficient permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Agent not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                not_found:
                  summary: Agent not found
                  value:
                    error:
                      code: "AGENT_NOT_FOUND"
                      message: "Agent with specified ID not found"
        '429':
          description: Too Many Requests - Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v0/me:
    get:
      summary: Get API Key Info
      description: Retrieve metadata about the API key used for authentication
      operationId: getApiKeyInfo
      tags:
        - General Endpoints
      security:
        - BearerAuth: []
      responses:
        '200':
          description: API key information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyInfo'
              examples:
                api_key_info:
                  summary: API key information
                  value:
                    apiKeyName: "Production API Key"
                    createdAt: "2024-01-15T10:30:00Z"
                    userEmail: "developer@example.com"
        '401':
          description: Unauthorized - Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unauthorized:
                  summary: Unauthorized access
                  value:
                    error:
                      code: "UNAUTHORIZED"
                      message: "Authentication required"
        '404':
          description: Not Found - The requested resource does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                not_found:
                  summary: Resource not found
                  value:
                    error:
                      code: "NOT_FOUND"
                      message: "The requested resource does not exist"
        '429':
          description: Too Many Requests - Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                rate_limit:
                  summary: Rate limit exceeded
                  value:
                    error:
                      code: "RATE_LIMIT_EXCEEDED"
                      message: "Too many requests"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                server_error:
                  summary: Internal server error
                  value:
                    error:
                      code: "INTERNAL_ERROR"
                      message: "An unexpected error occurred"

  /v0/models:
    get:
      summary: List Models
      description: Retrieve a list of available models
      operationId: listModels
      tags:
        - General Endpoints
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Models retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelsList'
              examples:
                models_list:
                  summary: List of available models
                  value:
                    models:
                      - "claude-4-sonnet-thinking"
                      - "o3"
                      - "claude-4-opus-thinking"
        '401':
          description: Unauthorized - Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unauthorized:
                  summary: Unauthorized access
                  value:
                    error:
                      code: "UNAUTHORIZED"
                      message: "Authentication required"
        '429':
          description: Too Many Requests - Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                rate_limit:
                  summary: Rate limit exceeded
                  value:
                    error:
                      code: "RATE_LIMIT_EXCEEDED"
                      message: "Too many requests"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                server_error:
                  summary: Internal server error
                  value:
                    error:
                      code: "INTERNAL_ERROR"
                      message: "An unexpected error occurred"

  /v0/repositories:
    get:
      summary: List GitHub Repositories
      description: |
        Retrieve a list of GitHub repositories accessible to the authenticated user.

        **Rate Limits**: This endpoint has strict rate limits - limit requests to 1 per user per minute and 30 per user per hour.
        The request can take tens of seconds to respond for users with access to many repositories.
        Ensure to handle scenarios where this information is not available gracefully.
      operationId: listRepositories
      tags:
        - General Endpoints
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Repositories retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoriesList'
              examples:
                repositories_list:
                  summary: List of GitHub repositories
                  value:
                    repositories:
                      - owner: "your-org"
                        name: "your-repo"
                        repository: "https://github.com/your-org/your-repo"
                      - owner: "another-org"
                        name: "another-repo"
                        repository: "https://github.com/another-org/another-repo"
        '401':
          description: Unauthorized - Invalid or missing API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                unauthorized:
                  summary: Unauthorized access
                  value:
                    error:
                      code: "UNAUTHORIZED"
                      message: "Authentication required"
        '429':
          description: Too Many Requests - Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                rate_limit:
                  summary: Rate limit exceeded
                  value:
                    error:
                      code: "RATE_LIMIT_EXCEEDED"
                      message: "Too many requests"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                server_error:
                  summary: Internal server error
                  value:
                    error:
                      code: "INTERNAL_ERROR"
                      message: "An unexpected error occurred"

components:
  schemas:
    LaunchAgentRequest:
      type: object
      required:
        - prompt
        - source
      properties:
        prompt:
          $ref: '#/components/schemas/Prompt'
        source:
          $ref: '#/components/schemas/Source'
        model:
          type: string
          description: The LLM to use
          minLength: 1
          example: "claude-4-sonnet"
        target:
          $ref: '#/components/schemas/TargetRequest'
        webhook:
          $ref: '#/components/schemas/Webhook'

    FollowUpRequest:
      type: object
      required:
        - prompt
      properties:
        prompt:
          $ref: '#/components/schemas/Prompt'

    FollowUpResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: Unique identifier of the agent
          pattern: '^bc_[a-zA-Z0-9]+$'
          example: "bc_abc123"

    DeleteAgentResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: Unique identifier of the deleted agent
          pattern: '^bc_[a-zA-Z0-9]+$'
          example: "bc_abc123"

    Prompt:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          description: The prompt text for the agent
          minLength: 1
          maxLength: 10000
          example: "Add a README.md file with installation instructions"
        images:
          type: array
          description: Optional array of images to include with the prompt
          items:
            $ref: '#/components/schemas/Image'

    Image:
      type: object
      required:
        - data
        - dimension
      properties:
        data:
          type: string
          format: byte
          description: Base64-encoded image data
          example: "iVBORw0KGgoAAAANSUhEUgAA..."
        dimension:
          $ref: '#/components/schemas/ImageDimension'

    ImageDimension:
      type: object
      required:
        - width
        - height
      properties:
        width:
          type: integer
          description: Width of the image in pixels
          minimum: 1
          maximum: 4096
          example: 1024
        height:
          type: integer
          description: Height of the image in pixels
          minimum: 1
          maximum: 4096
          example: 768

    Source:
      type: object
      required:
        - repository
        - ref
      properties:
        repository:
          type: string
          format: uri
          description: URL of the GitHub repository
          pattern: '^https://github\.com/[a-zA-Z0-9_.-]+/[a-zA-Z0-9_.-]+$'
          example: "https://github.com/your-org/your-repo"
        ref:
          type: string
          description: Branch or commit reference
          minLength: 1
          maxLength: 255
          example: "main"

    Agent:
      type: object
      required:
        - id
        - name
        - status
        - source
        - target
        - createdAt
      properties:
        id:
          type: string
          description: Unique identifier for the agent
          pattern: '^bc_[a-zA-Z0-9]+$'
          example: "bc_abc123"
        name:
          type: string
          description: Human-readable name for the agent
          minLength: 1
          maxLength: 200
          example: "Add README Documentation"
        status:
          type: string
          description: Current status of the agent
          enum:
            - CREATING
            - RUNNING
            - COMPLETED
            - FAILED
            - CANCELLED
            - EXPIRED
            - FINISHED
          example: "CREATING"
        source:
          $ref: '#/components/schemas/Source'
        target:
          $ref: '#/components/schemas/Target'
        summary:
          type: string
          description: Summary of the agent's task and results
          maxLength: 1000
          example: "Added README.md with installation instructions and usage examples"
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the agent was created
          example: "2024-01-15T10:30:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the agent was last updated
          example: "2024-01-15T11:45:00Z"

    TargetRequest:
      type: object
      properties:
        autoCreatePr:
          type: boolean
          default: false
          description: Whether to automatically create a pull request when the agent completes
          example: false
        branchName:
          type: string
          description: Custom branch name for the agent to create
          minLength: 1
          example: "feature/add-readme"

    Target:
      type: object
      required:
        - branchName
        - url
        - autoCreatePr
      properties:
        branchName:
          type: string
          description: Name of the branch created by the agent
          pattern: '^cursor/[a-zA-Z0-9_.-]+$'
          example: "cursor/add-readme-1234"
        url:
          type: string
          format: uri
          description: URL to access the agent in Cursor
          example: "https://cursor.com/agents?id=bc_abc123"
        prUrl:
          type: string
          format: uri
          description: URL of the associated pull request
          example: "https://github.com/your-org/your-repo/pull/1234"
        autoCreatePr:
          type: boolean
          description: Whether a pull request is automatically created
          default: false
          example: false

    Webhook:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          format: uri
          description: URL to receive webhook notifications about agent status changes
          maxLength: 2048
          example: "https://example.com/webhooks/cursor-agent"
        secret:
          type: string
          description: Secret key for webhook payload verification
          minLength: 32
          maxLength: 256
          example: "your-webhook-secret-key-minimum-32-characters"

    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          $ref: '#/components/schemas/Error'

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: Error code
          enum:
            - VALIDATION_ERROR
            - UNAUTHORIZED
            - FORBIDDEN
            - AGENT_NOT_FOUND
            - NOT_FOUND
            - RATE_LIMIT_EXCEEDED
            - INTERNAL_ERROR
          example: "VALIDATION_ERROR"
        message:
          type: string
          description: Human-readable error message
          minLength: 1
          maxLength: 500
          example: "Invalid request data"

    ApiKeyInfo:
      type: object
      required:
        - apiKeyName
        - createdAt
        - userEmail
      properties:
        apiKeyName:
          type: string
          description: Name of the API key
          minLength: 1
          maxLength: 200
          example: "Production API Key"
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the API key was created
          example: "2024-01-15T10:30:00Z"
        userEmail:
          type: string
          format: email
          description: Email address associated with the API key
          example: "developer@example.com"

    ModelsList:
      type: object
      required:
        - models
      properties:
        models:
          type: array
          description: List of available model names
          items:
            type: string
            description: Model identifier
            example: "claude-4-sonnet-thinking"
          example:
            - "claude-4-sonnet-thinking"
            - "o3"
            - "claude-4-opus-thinking"

    AgentsList:
      type: object
      required:
        - agents
      properties:
        agents:
          type: array
          description: List of background agents
          items:
            $ref: '#/components/schemas/Agent'
        nextCursor:
          type: string
          description: Cursor for pagination to get the next set of agents
          example: "bc_def456"

    RepositoriesList:
      type: object
      required:
        - repositories
      properties:
        repositories:
          type: array
          description: List of GitHub repositories accessible to the user
          items:
            $ref: '#/components/schemas/Repository'

    Repository:
      type: object
      required:
        - owner
        - name
        - repository
      properties:
        owner:
          type: string
          description: Owner/organization name of the repository
          minLength: 1
          maxLength: 100
          example: "your-org"
        name:
          type: string
          description: Name of the repository
          minLength: 1
          maxLength: 100
          example: "your-repo"
        repository:
          type: string
          format: uri
          description: Full URL of the GitHub repository
          pattern: '^https://github\.com/[a-zA-Z0-9_.-]+/[a-zA-Z0-9_.-]+$'
          example: "https://github.com/your-org/your-repo"

    ConversationResponse:
      type: object
      required:
        - id
        - messages
      properties:
        id:
          type: string
          description: Unique identifier of the agent
          pattern: '^bc_[a-zA-Z0-9]+$'
          example: "bc_abc123"
        messages:
          type: array
          description: Array of conversation messages
          items:
            $ref: '#/components/schemas/ConversationMessage'

    ConversationMessage:
      type: object
      required:
        - id
        - type
        - text
      properties:
        id:
          type: string
          description: Unique identifier for the message
          example: "msg_123"
        type:
          type: string
          description: Type of message
          example: "user_message"
        text:
          type: string
          description: The message content
          example: "Add a README.md file with installation instructions"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "API key from Cursor Dashboard. Include as 'Authorization: Bearer YOUR_API_KEY'"

security:
  - BearerAuth: []
